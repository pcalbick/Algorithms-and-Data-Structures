package Bags;

import java.util.Iterator;

public class BagArray implements Iterable<Item> {
	
	private int n = 0;
	private Item[] array;
	
	public BagArray() {
		array = (Item[]) new Object[1];
	}
	
	public void add(Item item) {
		array[n++] = item;
		if(n > array.length/2) array = resize(array.length*2);
	}
	
	public Item get(int i) {
		return array[i];
	}
	
	public void remove(int i) {
		for(int p=i; p<array.length-1; p++)
			array[p] = array[p+1];
	}
	
	private Item[] resize(int size) {
		Item[] arr = new Item[size];
		for(int i=0; i<array.length; i++)
			arr[i] = array[i];
		return arr;
	}
	
	public Iterator<Item> iterator(){
		return new GenericIterator();
	}
	
	private class GenericIterator implements Iterator<Item> {
		private int i = n;
		
		public Item next() { return array[--i]; }
		
		public boolean hasNext() { return i != 0; }
		
		public void remove() { throw new UnsupportedOperationException(); }
	}
}
