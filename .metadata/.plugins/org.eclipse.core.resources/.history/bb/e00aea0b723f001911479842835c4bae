package Sorts;

import java.util.Comparator;

public class QuickSort {
	
	private InsertionSort insertionSort;
	private Shuffle shuffle;
	
	public QuickSort() {
		insertionSort = new InsertionSort();
		shuffle = new Shuffle();
	}
	
	public void sort(File[] arr, Comparator<File> comparator) {
		shuffle.shuffle(arr);
	}
	
	private void partition(Comparator<File> c, File[] arr, int lo, int high) {
		int i = lo;
		int j = high + 1;
		while(true) {
			while(less(c,arr[++i],arr[lo]))
				if(i == high) break;
			while(less(c,arr[lo],arr[--j]))
				if(j == lo) break;
			if(i >= j) break;
			exchange(arr,i,j);
		}
	}
	
	private boolean less(Comparator<File> c, File a, File b) {
		return c.compare(a, b) < 0;
	}
	
	private void exchange(File[] a, int i, int j) {
		File swap = a[i];
		a[i] = a[j];
		a[j] = swap;
	}
}
