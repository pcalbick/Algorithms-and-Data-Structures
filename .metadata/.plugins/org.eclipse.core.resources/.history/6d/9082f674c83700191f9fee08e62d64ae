import java.util.Random;

public class Percolation {
	private int[][] grid;
	
	public Percolation(int n) {
		grid = new int[n][n];
		for(int i=0; i<n-1; i++) {
			for(int j=0; j<n-1; i++) {
				open(i,j);
			}
		}
	}
	
	public void open(int row, int col) {
		try {
			Random random = new Random(1);
			if(random.nextInt() == 1)
				grid[row][col] = 1;
			}
		catch(IllegalArgumentException e) {
			e.printStackTrace();
		}
	}
	
	public boolean isOpen(int row, int col) {
		try {
			if(grid[row][col] == 1)
				return true;
			return false;
		}
		catch(IllegalArgumentException e) {
			e.printStackTrace();
			return false;
		}
	}
	
	public boolean isFull(int row, int col) {
		try {
			if(grid[row][col] == 0)
				return true;
			return false;
		}
		catch(IllegalArgumentException e) {
			e.printStackTrace();
			return false;
		}
	}
	
	public int numberOfOpenSites() {
		int count = 0;
		for(int i=0; i<grid.length-1; i++) {
			for(int j=0; j<grid.length-1; i++) {
				if(grid[i][j] == 1)
					count++;
			}
		}
		return count;
	}
	
	public boolean percolates() {
		return false;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
	}

}
